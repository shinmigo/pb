syntax = "proto3";

package orderpb;

option go_package = "github.com/shinmigo/pb/orderpb";

import "basepb/basepb.proto";

service OrderService {
  rpc GetOrderList (ListOrderReq) returns (ListOrderRes);

  rpc GetOrderStatus (GetOrderStatusReq) returns (ListOrderStatusRes);

  rpc AddOrder (Order) returns (basepb.AnyRes);

  rpc PayOrder (PayOrderReq) returns (basepb.AnyRes);

  rpc CancelOrder(CancelOrderReq) returns (basepb.AnyRes);

  rpc DeleteOrder(DeleteOrderReq) returns (basepb.AnyRes);
}

enum OrderPaymentType {
  PaymentTypePlaceholder = 0;
  Online = 1;
}

enum OrderPaymentStatus {
  PaymentStatusPlaceholder = 0;
  Unpaid = 1;
  PartPaid = 2;
  AllPaid = 3;
}

enum OrderShippingStatus {
  ShippingStatusPlaceholder = 0;
  NotShipped = 1;
  PartShipped = 2;
  AllShipped = 3;
}

enum OrderConfirm {
  ConfirmPlaceholder = 0;
  ConfirmNo = 1;
  ConfirmYes = 2;
}

enum OrderStatus {
  StatusPlaceholder = 0;
  PendingPayment = 1;     //新建订单，待付款
  PendingReview = 2;      //已付款，待审核
  PendingShipment = 3;    //已审核，待发货
  PendingReceiving = 4;   //已发货，待收货
  PendingComment = 5;     //已收货，待评论
  Completed = 6;          //已完成
  Canceled = 7;           //已取消
}

enum OrderType {
  TypePlaceholder = 0;
  Normal = 1;
}

enum OrderRefundStatus {
  RefundStatusPlaceholder = 0;
  NotRefund = 1;
  PartRefund = 2;
  AllRefund = 3;
}

enum OrderReturnStatus {
  ReturnStatusPlaceholder = 0;
  NotReturn = 1;
  PartReturn = 2;
  AllReturn = 3;
}

message ListOrderReq {
  uint64 page = 1;
  uint64 page_size = 2;
  uint64 store_id = 3;
  uint64 member_id = 4;
  uint64 order_id = 5;
  string start_created_at = 6;
  string end_created_at = 7;
  repeated OrderStatus order_status = 8;
}

message OrderDetail {
  message OrderItems {
    uint64 order_item_id = 1;
    uint64 product_id = 2;
    string name = 3;
    string sku = 4;
    string image = 5;
    double price = 6;
    double old_price = 7;
    double total_payable = 8;
    double total_discount_amount = 9;
    uint64 qty_ordered = 10;
    double weight = 11;
    double volume = 12;
    string spec = 13;
    uint64 qty_shipped = 14;
  }
  message OrderAddress {
    uint64 order_address_id = 1;
    string receiver = 2;
    string telephone = 3;
    string province = 4;
    string city = 5;
    string region = 6;
    string street = 7;
  }
  message OrderShipment {
    string carrier_name = 1;
    string tracking_number = 2;
  }
  uint64 order_id = 1;
  uint64 store_id = 2;
  uint64 member_id = 3;
  OrderType order_type = 4;
  double subtotal = 5;
  double grand_total = 6;
  double total_paid = 7;
  double shipping_amount = 8;
  double discount_amount = 9;
  OrderPaymentType payment_type = 10;
  OrderPaymentStatus payment_status = 11;
  string payment_time = 12;
  OrderShippingStatus shipping_status = 13;
  string shipping_time = 14;
  OrderConfirm confirm = 15;
  string confirm_time = 16;
  OrderStatus order_status = 17;
  OrderRefundStatus refund_status = 18;
  OrderReturnStatus return_status = 19;
  string user_note = 20;
  repeated OrderItems order_items = 21;
  OrderAddress order_address = 22;
  OrderShipment order_shipment = 24;
  string created_at = 25;
  uint64 total_qty_ordered = 26;
}

message ListOrderRes {
  uint64 total = 1;
  repeated OrderDetail orders = 2;
}

message GetOrderStatusReq {
  uint64 store_id = 1;
  uint64 member_id = 2;
}

message ListOrderStatusRes {
  message OrderStatistics {
    uint64 order_status = 1;
    uint64 count = 2;
  }
  repeated OrderStatistics order_statistics = 1;
}

message Order {
  message Products {
    uint64 product_id = 1;
    uint64 product_spec_id = 2;
    uint64 qty = 3;
  }
  uint64 store_id = 1;
  uint64 member_id = 2;
  uint64 address_id = 3;
  string user_node = 5;
  repeated Products products = 6;
}

message PayOrderReq {
  repeated uint64 order_id = 1;
}

message CancelOrderReq {
  uint64 member_id = 1;
  uint64 store_id = 2;
  repeated uint64 order_id = 3;
}

message DeleteOrderReq{
  uint64 member_id = 1;
  uint64 store_id = 2;
  repeated uint64 order_id = 3;
}